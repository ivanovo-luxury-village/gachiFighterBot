services:
  postgres:
    container_name: postgres-gachi-fighter-bot
    image: postgres:15-alpine
    restart: unless-stopped
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./pg-init:/docker-entrypoint-initdb.d
    env_file:
      - .env
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin-gachi-fighter-bot
    image: dpage/pgadmin4:8.4
    restart: unless-stopped
    ports:
      - "127.0.0.1:8082:80"
    volumes:
      - pgadmindata:/var/lib/pgadmin
    env_file:
      - .env
    networks:
      - default
    depends_on:
      postgres:
        condition: service_healthy

  migrator:
    container_name: postgres-migrator-gachi-fighter-bot
    image: andrew771/gachi-fighter-bot:{{ .tag }}
    restart: no
    command:
      - sh
      - -c
      - |
        echo "apply migrations..."
        docker-entrypoint.sh --changelog-file=./changelog/changelog.xml update
    env_file:
      - .env
    # environment:
    #   - LIQUIBASE_LOG_LEVEL=FINE
    networks:
      - default
    depends_on:
      postgres:
        condition: service_healthy

  gachi-fighter-bot:
    container_name: gachi-fighter-bot
    image: andrew771/gachi-fighter-bot:{{ .tag }}
    restart: unless-stopped
    ports:
      - "80:80"
    env_file:
      - .env
    networks:
      - default

networks:
  default:
    driver: bridge

volumes:
  pgdata:
    driver: local
  pgadmindata:
    driver: local

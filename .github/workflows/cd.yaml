name: Manual Trigger Workflow

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag version"
        default: latest
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Render template
        id: render_compose_template
        uses: chuhlomin/render-template@v1
        with:
          template: docker-compose.yaml
          vars: |
            tag: ${{ inputs.tag }}
      - name: Render template
        id: render_env_template
        uses: chuhlomin/render-template@v1
        with:
          template: .env.template
          vars: |
            postgres_user: ${{ secrets.POSTGRES_USER }}
            postgres_password: ${{ secrets.POSTGRES_PASSWORD }}
            pgadmin_email: ${{ secrets.PGADMIN_EMAIL }}
            pgadmin_password: ${{ secrets.PGADMIN_PASSWORD }}
            token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
            webhook_secret: ${{ secrets.TELEGRAM_WEBHOOK_SECRET }}
            webhook_host: ${{ vars.TELEGRAM_WEBHOOK_HOST }}
      - name: Persist rendered templates
        run: |-
          echo '${{ steps.render_compose_template.outputs.result }}' > docker-compose.prod.yaml
          echo '${{ steps.render_env_template.outputs.result }}' > .env
      - name: Copy docker compose file
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.GACHI_FIGHTER_BOT_HOST }}
          username: ${{ secrets.GACHI_FIGHTER_BOT_USER }}
          password: ${{ secrets.GACHI_FIGHTER_BOT_PASSWORD }}
          source: "docker-compose.prod.yaml,.env"
          target: /opt/gachi-fighter-bot/
          overwrite: true
      - name: Pull and restart docker compose
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ vars.GACHI_FIGHTER_BOT_HOST }}
          username: ${{ secrets.GACHI_FIGHTER_BOT_USER }}
          password: ${{ secrets.GACHI_FIGHTER_BOT_PASSWORD }}
          script_stop: true
          script: |
            cd /opt/gachi-fighter-bot
            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            docker container rm postgres-migrator-gachi-fighter-bot || true
            docker compose -f docker-compose.prod.yaml pull
            docker compose -f docker-compose.prod.yaml up -d --force-recreate
            docker logout
